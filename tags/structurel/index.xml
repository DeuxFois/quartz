<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>structurel on</title><link>https://deuxfois.github.io/quartz/tags/structurel/</link><description>Recent content in structurel on</description><generator>Hugo -- gohugo.io</generator><language>fr-fr</language><atom:link href="https://deuxfois.github.io/quartz/tags/structurel/index.xml" rel="self" type="application/rss+xml"/><item><title>Composite / Composite</title><link>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Composite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Composite/</guid><description>Composite permet d’agencer les objets dans des arborescences afin de pouvoir traiter celles-ci comme des objets individuels.
Problème L’utilisation de ce patron doit être réservée aux applications dont la structure principale peut être représentée sous la forme d’une arborescence.</description></item><item><title>Décorateur / Decorator</title><link>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Decorateur/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Decorateur/</guid><description>Décorateur permet d’affecter dynamiquement de nouveaux comportements à des objets en les plaçant dans des emballeurs qui implémentent ces comportements.</description></item><item><title>Façade / Facade</title><link>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Fa%C3%A7ade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Fa%C3%A7ade/</guid><description>Façade procure une interface offrant un accès simplifié à une librairie, un framework ou à n’importe quel ensemble complexe de classes.</description></item><item><title>Poids mouche / Flyweight</title><link>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Poids_mouche/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Poids_mouche/</guid><description>Poids mouche est un patron de conception structurel qui permet de stocker plus d’objets dans la RAM en partageant les états similaires entre de multiples objets, plutôt que de stocker les données dans chaque objet.</description></item><item><title>Pont / Bridge</title><link>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Pont/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Pont/</guid><description>Le Pont permet de séparer une grosse classe ou un ensemble de classes connexes en deux hiérarchies — abstraction et implémentation — qui peuvent évoluer indépendamment l’une de l’autre.</description></item><item><title>Procuration / Proxy</title><link>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Procuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/Architecture/Design_Pattern/Structurel/Procuration/</guid><description>La Procuration qui vous permet d’utiliser un substitut pour un objet. Elle donne le contrôle sur l’objet original, vous permettant d’effectuer des manipulations avant ou après que la demande ne lui parvienne.</description></item></channel></rss>