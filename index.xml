<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://deuxfois.github.io/quartz/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><language>fr-fr</language><atom:link href="https://deuxfois.github.io/quartz/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://deuxfois.github.io/quartz/data-science/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/</guid><description>statistic dimensionality-reduction machine-learning Usefull links Pretrained Models https://aihub.cloud.google.com/u/0/
https://www.tensorflow.org/hub
https://nlp.johnsnowlabs.com/models
blog, newsletter and research paper https://paperswithcode.com/
https://towardsdatascience.com/
http://export.</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/dimensionality-reduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/dimensionality-reduction/</guid><description>[[data-science/dimensionality-reduction/introduction]]
[[data-science/dimensionality-reduction/covariances-correlation]]
[[data-science/dimensionality-reduction/acp]]</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/dimensionality-reduction/acp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/dimensionality-reduction/acp/</guid><description>Objectif Condenser l’information de la matrice des donn´ees afin d’en retirer les relations caractéristiques (ressemblances entre observations et liaisons entre variables) tout en limitant la perte d’information.</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/dimensionality-reduction/covariances-correlation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/dimensionality-reduction/covariances-correlation/</guid><description>Covariance et Corrélations Matrice des variances-covariances $$ \begin{aligned} S=\operatorname{Var}(\mathbf{X}) &amp;amp;=\left[\begin{array}{ccccc} \operatorname{Var}\left(X_{1}\right) &amp;amp; \operatorname{Cov}\left(X_{1}, X_{2}\right) &amp;amp; \cdots &amp;amp; \operatorname{Cov}\left(X_{1}, X_{d}\right) \ \operatorname{Cov}\left(X_{2}, X_{1}\right) &amp;amp; \ddots &amp;amp; \cdots &amp;amp; \operatorname{Cov}\left(X_{2}, X_{d}\right) \ \vdots &amp;amp; &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \ \operatorname{Cov}\left(X_{d}, X_{1}\right) &amp;amp; \operatorname{Cov}\left(X_{d}, X_{2}\right) &amp;amp; \cdots &amp;amp; \operatorname{Var}\left(X_{d}\right) \end{array}\right] \ &amp;amp;=\left[\begin{array}{cccc} s_{X_{1}}^{2} &amp;amp; s_{X_{1}, X_{2}}^{2} &amp;amp; \cdots &amp;amp; s_{X_{1}, X_{d}}^{2} \ s_{X_{2}, X_{1}}^{2} &amp;amp; \ddots &amp;amp; \cdots &amp;amp; s_{X_{2}, X_{d}}^{2} \ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \ s_{X_{d}, X_{1}}^{2} &amp;amp; s_{X_{d}, X_{2}}^{2} &amp;amp; \cdots &amp;amp; s_{X_{d}}^{2} \end{array}\right] \end{aligned} $$ avec $s_{j, j^{\prime}}^{2}$ la covariance entre les variables $X_{j}$ et $X_{j^{\prime}}$, tel que $$ s_{X_{j}, X_{j^{\prime}}}^{2}=\sum_{i=1}^{m} p_{i}\left(x_{i j}-\mu_{j}\right)\left(x_{i j^{\prime}}-\mu_{j^{\prime}}\right) $$ La covariance mesure la liaison linéaire qui peut exister entre un couple de variables quantitatives.</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/dimensionality-reduction/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/dimensionality-reduction/introduction/</guid><description>Comment décrire les données ? Approche 1 effectuer une analyse descriptive multidimensionelle ⊖ trop longue et souvent trop complexe
Approche 2 : utiliser des méthodes d’analyse des données ex: les méthodes factorielles comme l’Analyse en Composantes Principales (ACP) • Synthèse : réduire la dimension du problème tout en restituant le maximum d’information • Descriptif et exploratoire : visualisation des données (production de graphiques simples)</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/generative-discriminative-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/generative-discriminative-2/</guid><description>[Note] Variations on supervised and unsupervised Model ? Semi-Supervised Learning: we have a bunch of pairs (x1,y1), (x2,y2), &amp;hellip;(x_i,y_i), and then we are additionally given more x values such as x_i+1, x_i+2,.</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/generative-vs-discriminative/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/generative-vs-discriminative/</guid><description>What&amp;rsquo;s Generative or Discriminative model? Let&amp;rsquo;s say you have input data x and you want to classify the data into labels y.</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/</guid><description>supervised-learning
unsupervised-learning
generative-vs-discriminative</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/classification/bayes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/classification/bayes/</guid><description>Bayes Law $$ \underbrace{\mathbb{P}(Y \mid X)}_{\text {Posterior probability }}=\frac{\overbrace{\mathbb{P}(Y)}^{\text {Prior probability}} \cdot \overbrace{\mathbb{P}(X \mid Y)}^{\text {Likelihood}}}{\mathbb{P}(X)} $$ the denominator is given by $\mathbb{P}(X) = {\mathbb{P}(X|Y=\mathbf{1})}\mathbb{P}(Y=1)+{\mathbb{P}(X|Y=\mathbf{0})}\mathbb{P}(Y=0)$</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/classification/evaluation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/classification/evaluation/</guid><description/></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/classification/knn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/classification/knn/</guid><description/></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/clustering/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/clustering/introduction/</guid><description>Organiser les par groupes. $\left{\mathbf{x}{i}\right}{i=1}^{n} \rightarrow\left{\hat{y}{i}\right}{i=1}^{n}$ $\hat{y} \in \mathcal{Y}$ représente un cluster
![[Pasted image 20220406111839.png]]
k-means ( $k$-moyennes). Mélange de gaussiennes Clustering hiérarchique</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/clustering/kmeans/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/clustering/kmeans/</guid><description>Kmeans centroïde $\boldsymbol{\mu}=\frac{1}{m} \sum_{i}^{m} \mathbf{x}_{i}$ inertie $\mathcal{I}{T}=\sum{\mathbf{x}{i}}\left|\mathbf{x}{i}-\boldsymbol{\mu}\right|^{2}$ ![[Pasted image 20220406110758.png]]
Inertie L&amp;rsquo;inertie $\mathcal{I}{T}$ d&amp;rsquo;un nuage des points est représentée par la distance au carré des points à leur centroïde $$\sum{\mathbf{x}{i}}\left|\mathbf{x}{i}-\boldsymbol{\mu}\right|^{2}=\sum_{c=1} m_{c}\left|\boldsymbol{\mu}{c}-\boldsymbol{\mu}\right|^{2} \quad+\sum{c=1} \sum_{\mathbf{x}{i} \mid \hat{y}{i}=c}\left|\mathbf{x}{i}-\boldsymbol{\mu}{c}\right|^{2} $$</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/regression/batch-vs-stohastic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/regression/batch-vs-stohastic/</guid><description>Batch vs Stochastic Batch Gradient Descent BGD is a variation of the gradient descent algorithm that calculates the error for each eg in the training datasets, but only updates the model after all training examples have been evaluated.</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/regression/linear-regression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/regression/linear-regression/</guid><description>Regression linéaire Données d&amp;rsquo;apprentissage : $\lbrace\mathbf{x}_{i}, y_{i} \rbrace_{i=1}^{m}$
observations (entrées) $: \mathbf{x}_{i} \in \mathbb{R}^{d}$
mesure d&amp;rsquo;intérêt (sortie à prédire) : $y_{i} \in \mathcal{Y}$</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/regression/logistic-regression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/regression/logistic-regression/</guid><description/></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/machine-learning/regression/perceptron/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/machine-learning/regression/perceptron/</guid><description/></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/statistic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/statistic/</guid><description>[[data-science/statistic/probability-density]]
[[data-science/statistic/gaussian]]</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/statistic/gaussian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/statistic/gaussian/</guid><description>Loi normale En théorie des probabilités et en statistique, les lois normales sont parmi les lois de probabilité les plus utilisées pour modéliser des phénomènes naturels issus de plusieurs événements aléatoires.</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/statistic/probability-density/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/statistic/probability-density/</guid><description>densité proba Estimer la loi de proba des données
Modèle peut être génératif $\left{\mathbf{x}{i}\right}{i=1}^{n} \Rightarrow p(\mathbf{x})$ $p(\mathbf{x})$ est une densité de proba $\left(\int p(\mathbf{x}) d \mathbf{x}=1\right)$ Paramètres : Type de loi (gaussienne, &amp;hellip;) Paramètres de la loi $(\mu, \Sigma)$ !</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/supervised-learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/supervised-learning/</guid><description>Apprentissage supervisé On associe à chaque observation $\mathbf{x}_{i}$ une valeur à prédire $y_{i} \in \mathcal{Y}$. Tout comme pour les observation les valeurs à prédire (label) peuvent être concaténées en un vecteur $\mathbf{y} \in \mathcal{Y}^{n}$ L&amp;rsquo;espace des valeurs à prédire $\mathcal{Y}$ sera : $\mathcal{Y}=\lbrace{-1,1}\rbrace$ pour la classification binaire ou $\mathcal{Y}={1, \ldots, m}$ pour la classification multi-classes ( $m$ classes).</description></item><item><title/><link>https://deuxfois.github.io/quartz/data-science/unsupervised-learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/data-science/unsupervised-learning/</guid><description>Apprentissage non-supervisé $\mathbf{x} \in \mathbb{R}^{d}$ est une observation de $d$ variables réelles. L&amp;rsquo;ensemble d&amp;rsquo;apprentissage est définit par les observations $\lbrace{x}_{i}\rbrace_{i=1}^{m}$ où $n$ est le nombre d&amp;rsquo;exemples d&amp;rsquo;apprentissages (de points).</description></item><item><title/><link>https://deuxfois.github.io/quartz/Links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/Links/</guid><description>Usefull links</description></item><item><title/><link>https://deuxfois.github.io/quartz/master/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/</guid><description>Semestre1 Concurrence dans les systèmes concurrence-donnees
Droit droit
Graphisme graphisme
Paradigmes - Java et Scala paradigmes</description></item><item><title/><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/</guid><description>Algorithmes producteur-consommateur
reader-writer C
reader-writer Java
reentrantlock
Cours ordonnancement-des-processus
linux-states-signals
synthese
processes-linux
threads-java
Liens utiles https://www.geeksforgeeks.org/introduction-of-process-synchronization/?ref=lbp</description></item><item><title/><link>https://deuxfois.github.io/quartz/master/droit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/droit/</guid><description>bases-de-données-quelles-protections
droit-auteur-et-protection-numérique
gnu-linux-et-les-logiciels-libres
les-types-entreprises</description></item><item><title/><link>https://deuxfois.github.io/quartz/master/droit/gnu-linux-et-les-logiciels-libres/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/droit/gnu-linux-et-les-logiciels-libres/</guid><description>Les logiciels libres et la Free Software Foundation La Free Software Foundation est une organisation dont le but est de développer des logiciels libres.</description></item><item><title/><link>https://deuxfois.github.io/quartz/master/graphisme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/</guid><description>introduction
drawing-2d-primitives
2d-drawing
2d-transformations-and-matrices
3d-graphics
3d-viewing
surface-model
rendering-pipeline-overview
rendering-pipeline
lighting
exercices
glsl-shader</description></item><item><title/><link>https://deuxfois.github.io/quartz/master/graphisme/3d-viewing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/3d-viewing/</guid><description>Specification of a View Volume View Plane (projection plane) is defined by : VRP = View Reference Point</description></item><item><title/><link>https://deuxfois.github.io/quartz/master/graphisme/rendering-pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/rendering-pipeline/</guid><description>Introduction Once data has been loaded in an OpenGL buffer and the rendering sequence started, the OpenGL rendering pipeline is started.</description></item><item><title/><link>https://deuxfois.github.io/quartz/master/paradigmes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/paradigmes/</guid><description>java-oop
introduction
java-5
java-8
java-all-versions
modern-java
scala</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/</guid><description>Network It is the interconnection of multiple devices, generally termed as Hosts connected using multiple paths for the purpose of sending/receiving data or media.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/CSS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/CSS/</guid><description>CSS animations
advanced-animations
centring
Positioning
flexbox
pseudoClass
features</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/HTML/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/HTML/</guid><description>HTML Cheat Sheet A reminder of HTML elements.
Cheatsheet ![[Pasted image 20220804105558.png]] Minimal page 1 2 3 4 5 6 7 8 9 10 &amp;lt;!</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/http/</guid><description>HTTP Messages HTTP messages are how data is exchanged between a server and a client. There are two types of messages: HTTP-Request sent by the client to trigger an action on the server, and HTPP-Response, the answer from the server.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/HTTP/HTPP-Response/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/HTTP/HTPP-Response/</guid><description>HTTP Responses Status line The start line of an HTTP response, called the status line, contains the following information:
The protocol version, usually HTTP/1.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/HTTP/HTTP-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/HTTP/HTTP-2/</guid><description>The beginning oh HTTP/2 HTTP/2 has made some serious improvements with non-blocking downloads, pipelines and push servers that helped us overcome some of the limitations of the underlying TCP protocol.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/HTTP/HTTP-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/HTTP/HTTP-3/</guid><description>QUIC and HTTP/3 QUIC (Quick UDP Internet Connections) was first deployed by Google in 2012. It redefines the boundaries of the network layers by building on the lower-level UDP protocol, redefining the handshakes, reliability functions, and security functions in &amp;ldquo;user space,&amp;rdquo; thus avoiding the need to upgrade the kernels of Internet systems.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/HTTP/HTTP-Request/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/HTTP/HTTP-Request/</guid><description>HTTP Requests Start line HTTP requests are messages sent by the client to initiate an action on the server. Their start-line contain three elements:</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/HTTP/Methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/HTTP/Methods/</guid><description>KNOW YOUR HTTP methods WELL The request method token is the primary source of request semantics; it indicates the purpose for which the client has made this request and what is expected by the client as a successful result.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/HTTP/Status-Codes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/HTTP/Status-Codes/</guid><description>KNOW YOUR HTTP status codes WELL The status-code element is a 3-digit integer code giving the result of the attempt to understand and satisfy the request.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/Modern-Javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/Modern-Javascript/</guid><description>Notions Destructuring objects and arrays Destructuring is a convenient way of creating new variables by extracting some values from data stored in objects or arrays.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/Node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/Node/</guid><description>Node Introduction
Error Handling manage-error
verror
Events events
once
Pattern patterns</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/node/error-handling/manage-error/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/node/error-handling/manage-error/</guid><description>First-error callbacks in Node Content The &amp;quot;error-first&amp;quot; callback (also &amp;ldquo;errorback&amp;rdquo; or &amp;ldquo;err-back&amp;rdquo;) has become the standard protocol for Node as to enable a balanced, non-blocking flow of control and processing power across applications and modules.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/node/error-handling/verror/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/node/error-handling/verror/</guid><description>Wrapping Errors in Node.Js Using node-verror Content The module node-verror can be used to produce useful error messages in Node.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/node/events/events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/node/events/events/</guid><description>Consuming events Content Node applications are event driven applications, an event occurs upon a change of state in an application, for example, a button being clicked, or data being inputted.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/node/events/once/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/node/events/once/</guid><description>Listening to events just once Content Events are actions that happen within your JavaScript application and are signaled by the system such that we can react to them.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/node/Introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/node/Introduction/</guid><description>What is NodeJS? Content Node.js is an extremely powerful JavaScript framework which was built upon Google Chrome’s V8 JavaScript engine.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/node/node-patterns/patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/node/node-patterns/patterns/</guid><description>Factories design pattern Content In order to avoid custom object creation with different arguments, factories can be used instead. Their usage is obvious when working with complex constructors or you want to avoid copypasta.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/node/operational-vs-programmer-errors/handling-operational-errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/node/operational-vs-programmer-errors/handling-operational-errors/</guid><description>Handling Operational Errors Content There isn&amp;rsquo;t a single place in the application where errors can pop up, so you should be prepared to handle them wherever you are making a HTTP request, performing I/O operations, forking processes or validation input.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/node/operational-vs-programmer-errors/handling-programmer-errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/node/operational-vs-programmer-errors/handling-programmer-errors/</guid><description>Handling Programmer Errors Content Programmer errors are bugs. Hence, they can&amp;rsquo;t and shouldn&amp;rsquo;t be handled. The only way to deal with them is to debug and fix the problem.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/node/operational-vs-programmer-errors/operational-vs-programmer-errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/node/operational-vs-programmer-errors/operational-vs-programmer-errors/</guid><description>Operational vs. Programmer Errors Content Errors in Node start off as scary. What if my server dies when there are hundreds of people connected?</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/animations/advanced-animations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/animations/advanced-animations/</guid><description>Animations in Webkit browsers Content Many Webkit browsers still use the -webkit-prefixed version of animations, keyframes, and transitions.
Until they fully adopt the standard version, it&amp;rsquo;s good practice to include both versions (unprefixed &amp;amp; webkit) in your code:</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/animations/animations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/animations/animations/</guid><description>Animation basics in CSS Content There are two main properties when it comes to animating : animation and keyframes.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/centring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/centring/</guid><description>Horizontal centering fluid blocks Content To horizontally center blocks of unknown width:
1 2 3 4 5 #horizontal-center { position: absolute; left: 50%; transform: translateX(-50%); } The left property relates to the size of the parent so the left of child will be in the middle.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/features/</guid><description>Use SVG for icons Content Since SVG (Scalable Vector Graphics) scales well for all resolution types, it is useful for icons:</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/flexbox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/flexbox/</guid><description>Simple example 1 2 3 .container { display: flex; } 1 2 3 .container &amp;gt; div { flex: 1 1 auto; } Container 1 2 display: flex; display: inline-flex; 1 2 3 4 flex-direction: row; /* ltr - default */ flex-direction: row-reverse; /* rtl */ flex-direction: column; /* top-bottom */ flex-direction: column-reverse; /* bottom-top */ 1 2 flex-wrap: nowrap; /* one-line */ flex-wrap: wrap; /* multi-line */ 1 2 3 4 align-items: flex-start; /* vertical-align to top */ align-items: flex-end; /* vertical-align to bottom */ align-items: center; /* vertical-align to center */ align-items: stretch; /* same height on all (default) */ 1 2 3 4 5 6 justify-content: flex-start; /* [xxx ] */ justify-content: center; /* [ xxx ] */ justify-content: flex-end; /* [ xxx] */ justify-content: space-between; /* [x x x] */ justify-content: space-around; /* [ x x x ] */ justify-content: space-evenly; /* [ x x x ] */ 1 } {: .</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/positioning-tips/cells/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/positioning-tips/cells/</guid><description>Controlling cellpadding and cellspacing in CSS Content Cellpadding refers to the space between the cell content and the cell wall, while, cellspacing refers to the space between table cells.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/positioning-tips/clearfix-for-layouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/positioning-tips/clearfix-for-layouts/</guid><description>Clearfix for layouts Content Use clearfix to make an element automatically clear its child elements, so there would be no need for additional markup :</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/positioning-tips/direction-column-reverse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/positioning-tips/direction-column-reverse/</guid><description>Direction : column-reverse Content In Flexbox, column-reverse enables users to arrange elements vertically in reverse order.
1 2 3 4 5 6 &amp;lt;div class=&amp;#34;parent&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;child-1&amp;#34;&amp;gt;Child 1&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;child-2&amp;#34;&amp;gt;Child 2&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;child-3&amp;#34;&amp;gt;Child 3&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;child-4&amp;#34;&amp;gt;Child 4&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 1 2 3 4 5 .</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/positioning-tips/equal-width-table-cells/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/positioning-tips/equal-width-table-cells/</guid><description>Equal width table cells Content Use table-layout: fixed to keep a table&amp;rsquo;s cells at equal width:
1 2 3 #second-table { table-layout: fixed; } This is how the table would look without the property:</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/Positioning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/Positioning/</guid><description>block-elements-characteristics
floating-elements
inline-block-elements-characteristics
inline-elements-characteristics
positioning-elements
clearfix-for-layouts
cells
direction-column-reverse
equal-width-table-cells</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/positioning/block-elements-characteristics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/positioning/block-elements-characteristics/</guid><description>Block Elements Characteristics Content A block element has the following characteristics:
It always begins on a new line Its height, line-height, top-margin and bottom-margin can be specified Its width defaults to 100% of its containing element, unless otherwise specified Examples of block elements include &amp;lt;div&amp;gt;, &amp;lt;p&amp;gt;, &amp;lt;h1&amp;gt;, &amp;lt;form&amp;gt;, &amp;lt;ul&amp;gt; and &amp;lt;li&amp;gt;.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/positioning/floating-elements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/positioning/floating-elements/</guid><description>Floating Elements Content Another way to position elements on page is with floats. This property allows elements to be positioned to the left or right side of the parent element.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/positioning/inline-block-elements-characteristics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/positioning/inline-block-elements-characteristics/</guid><description>Inline-block Elements Characteristics Content There aren&amp;rsquo;t any inline-block elements per se: they are inline elements that accept some block-specific properties.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/positioning/inline-elements-characteristics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/positioning/inline-elements-characteristics/</guid><description>Inline Elements Characteristics Content An inline element has the following characteristics:
It begins on the same line as its siblings Its height, line-height, top-margin and bottom-margin can&amp;rsquo;t be changed Its width is as wide as the content and can&amp;rsquo;t be modified Examples of inline elements include &amp;lt;span&amp;gt;, &amp;lt;a&amp;gt;, &amp;lt;label&amp;gt;, &amp;lt;input&amp;gt;, &amp;lt;img&amp;gt;, &amp;lt;strong&amp;gt; and &amp;lt;em&amp;gt;.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/positioning/positioning-elements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/positioning/positioning-elements/</guid><description>Positioning Elements Content Now that you can tell how much space an element takes when rendered based on its properties, the next step is to position it in the page layout.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/drag-and-drop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/drag-and-drop/</guid><description>Drag-and-Drop pseudo-class :drop Content The :drop selector allows styling of the drop zone (the place where the element is supposed to be dropped), during the time when the user is dragging (or carrying) the element to be dropped.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/empty-blank/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/empty-blank/</guid><description>:empty and :blank Content With :empty you can select an element based on there being no children in it, whether that be elements, text nodes, or even white space nodes.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/highlight/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/highlight/</guid><description>Highlight input forms using :focus pseudo-class Content Responsiveness can make the forms more user-friendly and easier to read.
The :focus pseudo-class allows us to target the form element that is clicked on.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/hover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/hover/</guid><description>The hover Pseudo-Class Content One of the most versatile and used pseudo-classes is :hover. Whenever an element on a website reacts to the mouse pointer being on top of it, usually it is because of the :hover pseudo-class matching.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/in-out-of-range/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/in-out-of-range/</guid><description>The :in-range &amp;amp; :out-of-range Pseudo-Classes Content Another set of pseudo-classes that can be applied only to elements that have (and can take) a range limitation, such as &amp;lt;input&amp;gt;s, are :in-range and :out-of-range.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/Introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/Introduction/</guid><description>Required and optional pseudo classes Content Especially when creating a form, some fields in it are mandatory for user to complete.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/matches-pseudo-class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/matches-pseudo-class/</guid><description>Matches-any pseudo-class :is Content The :is pseudo-class allows the application of rules to groups of selectors.
1 2 3 p:is(.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/not/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/not/</guid><description>Use :not() to apply/unapply styles Content Rather than adding a border to a navigation bar, and then removing it for the last element:</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/nth-child/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/nth-child/</guid><description>The nth-child Property Content The basic usage of the nth-child pseudo-class is to select a single child of the targeted element, like so:</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/pseudo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-classes/pseudo/</guid><description>Use pseudo-classes to describe a special state of an element Content Unlike regular classes, pseudo-classes are not specified in the HTML.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-elements/before-after/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-elements/before-after/</guid><description>Styling elements with ::before &amp;amp; ::after Content Use the ::before selector to add and style content just before the first child of an element.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-elements/first-letter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-elements/first-letter/</guid><description>Drop caps with ::first-letter Content Using the ::first-line and ::first-letter pseudo elements that have been introduced in CSS1, a nice typographic effect like a drop cap can be achieved.</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudo-elements/selection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudo-elements/selection/</guid><description>Change selected area color Content Highlighted text area colors can be easily change with the ::selection pseudo element.
Apply ::selection on a paragraph:</description></item><item><title/><link>https://deuxfois.github.io/quartz/web-network/styling/pseudoClass/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/styling/pseudoClass/</guid><description>Introduction
drag-and-drop
empty-blank
highlight
hover
in-out-of-range
matches-pseudo-class
not
nth-child
pseudo</description></item><item><title>0. Java OOP</title><link>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/java-oop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/java-oop/</guid><description>Encapsulation Definition Wrapping the fields (state) and methods (behaviors) together as a single unit in a way that sensitive data are hidden from the users.</description></item><item><title>1. Ordonnancement des Processus</title><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/ordonnancement-des-processus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/ordonnancement-des-processus/</guid><description>Definition Un processus est un programme en exécution, un fichier binaire chargé et lancé. Lors de l’exécution chaque processus est associé à un contexte d’exécution.</description></item><item><title>1. Introduction</title><link>https://deuxfois.github.io/quartz/master/graphisme/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/introduction/</guid><description>creation, storage and manipulation of models (biological, mathematical, artistic or abstract structures) and images
Animation Pipeline = 3 steps: modeling, animating, rendering Interactive vs Batch Computer Graphics Interactive Computer Graphics Control of content, structure and appearance of objects via rapid visual feedback Components Input (mouse, stylus, multi-touch, body…)</description></item><item><title>1. Introduction</title><link>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/introduction/</guid><description>Péocupation fonctionnalité test compléxité Extensibilité si je veux rajouter une fonctionnalité, est-ce que je dois tout modifier Modularité si je modifie un fichier, est-ce que ca a une conséquence pour les autres fichiers ?</description></item><item><title>2. Drawing 2D primitives</title><link>https://deuxfois.github.io/quartz/master/graphisme/drawing-2d-primitives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/drawing-2d-primitives/</guid><description>Models are mathematical descriptions of geometric elements called primitives lines and segments
polygons: quads (2 triangles), triangles, &amp;hellip;</description></item><item><title>2. Java5</title><link>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/java-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/java-5/</guid><description>Java 5 : Généricité Méthode qui s’applique sur n’importe quel type
une méthode par type et par collection type primitifs objets Polymorphisme collections ArrayList contient des Objects 1 2 3 ist list = new ArrayList(); list.</description></item><item><title>2.1 2D Drawing</title><link>https://deuxfois.github.io/quartz/master/graphisme/2d-drawing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/2d-drawing/</guid><description>LINE DRAWING Given the specification for a straight line, find the collection of addressable pixels which most closely approximates this line.</description></item><item><title>3. 2D TRANSFORMATIONS AND MATRICES</title><link>https://deuxfois.github.io/quartz/master/graphisme/2d-transformations-and-matrices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/2d-transformations-and-matrices/</guid><description>Special cases of 2D Transformations: Scale matrix sx 0 0 0 sy 0 0 0 1 What if sx and/ or sy &amp;lt; 0 ?</description></item><item><title>3. JAVA 8</title><link>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/java-8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/java-8/</guid><description>Lambda Expression 1 2 (int a) -&amp;gt; a * 2; // Calculate the double of a a -&amp;gt; a * 2; // or simply without type 1 (a, b) -&amp;gt; a + b; // Sum of 2 parameters If the lambda is more than one expression we can use { } and return</description></item><item><title>3.1 Three-Dimensional Graphics</title><link>https://deuxfois.github.io/quartz/master/graphisme/3d-graphics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/3d-graphics/</guid><description>We will use a right-handed coordinate system.
Left-handed suitable to screens.
To transform from right to left, negate the z values.</description></item><item><title>6. Surface Model</title><link>https://deuxfois.github.io/quartz/master/graphisme/surface-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/surface-model/</guid><description>Polygonal Surfaces Set of flat geometric primitives (quads, triangles) 3 vertices define a plane ax + by + cz + d = 0</description></item><item><title>6283. Lighting</title><link>https://deuxfois.github.io/quartz/master/graphisme/lighting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/lighting/</guid><description>Basic Lighting Lighting in the real world is extremely complicated and depends on way too many factors, something we can&amp;rsquo;t afford to calculate on the limited processing power we have.</description></item><item><title>7 Rendering Pipeline Overview</title><link>https://deuxfois.github.io/quartz/master/graphisme/rendering-pipeline-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/rendering-pipeline-overview/</guid><description>Pipeline
Diagram of the Rendering Pipeline. The blue boxes are programmable shader stages.
The OpenGL rendering pipeline is initiated when you perform a rendering operation.</description></item><item><title>Bases de données : quelles protections ?</title><link>https://deuxfois.github.io/quartz/master/droit/bases-de-donn%C3%A9es-quelles-protections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/droit/bases-de-donn%C3%A9es-quelles-protections/</guid><description>La protection du contenu de la base de données Outre la structure de la base de données, son contenu peut également faire l’objet d’une protection particulière, sui generis, par le droit de la propriété intellectuelle.</description></item><item><title>Consomme</title><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/consomme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/consomme/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 #include &amp;lt;unistd.</description></item><item><title>Droit d'auteur et protection des créations numériques</title><link>https://deuxfois.github.io/quartz/master/droit/droit-auteur-et-protection-num%C3%A9rique/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/droit/droit-auteur-et-protection-num%C3%A9rique/</guid><description>Œuvres protégées : La protection par droit d’auteur s’applique à toutes les œuvres de l’esprit quels qu’en soient le genre, la forme d’expression, le mérite ou la destination : œuvres littéraires, musicales, audiovisuelles, publicitaires, photographiques, mais aussi bases de données, sites Internet (=site web), blogs.</description></item><item><title>Exercices</title><link>https://deuxfois.github.io/quartz/master/graphisme/exercices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/exercices/</guid><description>Concepts you should understand and be able to explain Chapitre 0 - Introduction Computer graphics Animation Modeling Rendering Graphics system Primitives Object/local coordinates World coordinates Screen coordinates Hierarchical scene modeling Scenegraph Chapitre 1 - Drawing 2D Primitives Rasterization Scan conversion Clipping (Cohen-Sutherland) Aliasing Parametric equations of a line Cosmetic pattern Geometric pattern Chapitre 2 - Geometrical Transformations Vector, unit vector Vector dot product Vector cross product Matrix multiplication Matrix inversion 2D and 3D Homogeneous coordinates (Affine) Transformations Translation/Rotation/Scale/Shear Composite transformations Fixed-point transformations Transformation of points Transformation of coordinate systems Rotation about an arbitrary axis Chapitre 3 - Viewing in 3D Modeling transformation Viewing transformation Projection transformation Window-to-viewport transformation Aspect ratio Parallel vs.</description></item><item><title>Java Versions and Features</title><link>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/java-all-versions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/java-all-versions/</guid><description>Version Year Features added JDK Beta 1995 JDK 1.</description></item><item><title>Les types d'entreprises</title><link>https://deuxfois.github.io/quartz/master/droit/les-types-entreprises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/droit/les-types-entreprises/</guid><description>a) L’entreprise individuelle Son existence en droit repose sur la personnalité juridique du propriétaire : l’entrepreneur individuel. Le patrimoine de l’entrepreneur et celui de l’entreprise se confondent.</description></item><item><title>Linux Process States and Signals</title><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/linux-states-signals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/linux-states-signals/</guid><description>Linux Process States and Signals When troubleshooting a system, it’s important to understand the process life-cycle and how the scheduler divides the CPU cores between the running processes and how the kernel communicates with process and how the processes communicate among themselves.</description></item><item><title>MDN</title><link>https://deuxfois.github.io/quartz/web-network/MDN/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/web-network/MDN/</guid><description>Resources The following resources can help you better understand the concepts, elements, and APIs presented in this course.
HTML Overview doctype element Elements What is the difference between HTML tags and elements?</description></item><item><title>Modern Java</title><link>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/modern-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/modern-java/</guid><description>Resources Java 8 Javadoc Java SE8 for the Really Impatient: A Short Course on the Basics by Cay S.</description></item><item><title>Reader Writer</title><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/reader-writer-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/reader-writer-1/</guid><description>Producer.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public class Producer implements Runnable { private Message msg; public Producer(Message msg) { this.</description></item><item><title>Reader/writer</title><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/reader-writer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/reader-writer/</guid><descriptioninclude &amp;lt;unistd.</description></item><item><title>ReentrantLock</title><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/reentrantlock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/reentrantlock/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class ReentrantLock { private final Object sync = new Object(); // private monitor private Thread lockedBy = null; // null =&amp;gt; unlocked private int lockCount = 0; public void lock() throws InterruptedException { synchronized (sync) { while (lockedBy !</description></item><item><title>Scala</title><link>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/scala/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/programmation-multi-paradigme/scala/</guid><description>Evaluation Rules 1 2 3 4 5 6 7 def example = 2 // evaluated when called val example = 2 // evaluated immediately lazy val example = 2 // evaluated once when needed def square(x: Double) // call by value def square(x: =&amp;gt; Double) // call by name def myFct(bindings: Int*) { .</description></item><item><title>Simplest Galaxy renderer</title><link>https://deuxfois.github.io/quartz/master/graphisme/simplest-galaxy-renderer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/simplest-galaxy-renderer/</guid><description>Simplest Galaxy renderer INF2110 - Introduction à l’Informatique Graphique
**Philippe Kévin**kv.philippe@gmail.comUniversité Bretagne Sud Usage compile make -f Makefile outputName</description></item><item><title>Synthese</title><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/synthese/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/synthese/</guid><description/></item><item><title>Tutoriel : Les shaders en GLSL</title><link>https://deuxfois.github.io/quartz/master/graphisme/glsl-shader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/graphisme/glsl-shader/</guid><description>Les shaders en GLSL Bonjour à tous ! :)
Vous êtes-vous jamais demandé comment étaient faits les superbes effets 3D à la mode comme on en voit dans les jeux vidéos récents, comme par exemple l’eau, l’HDR ou l’effet de flou de vitesse dans les jeux de voiture ?</description></item><item><title>Understanding Processes on Linux</title><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/processes-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/processes-linux/</guid><description>Linux Processes Basics In short, processes are running programs on your Linux host that perform operations such as writing to a disk, writing to a file, or running a web server for example.</description></item><item><title>Understanding Threads in Java.</title><link>https://deuxfois.github.io/quartz/master/concurrence-donnees/threads-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://deuxfois.github.io/quartz/master/concurrence-donnees/threads-java/</guid><description>Thread Life Cycle (image:baeldung.com)
In the life cycle, there are 7 states. lets discuss about them,
New This the state where the thread is created.</description></item></channel></rss>